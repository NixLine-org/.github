#
# NixLine CI (reusable) - Consumer Repository Workflow
#
# IMPORTANT: This workflow is designed for CONSUMER repositories that materialize
# and validate policy files FROM a baseline repository.
#
# DO NOT USE for baseline repositories - they need different validation:
# - Baseline repos validate source integrity (flake check, app functionality)
# - Consumer repos validate materialized files (this workflow)
#
# Usage: Consumer repositories only
# Purpose: Materialize policies from baseline and validate compliance
#

name: NixLine CI (reusable)
on:
  workflow_call:
    inputs:
      channel: { required: false, default: stable, type: string }
      packs:
        {
          required: false,
          default: "gh-actions,precommit,editorconfig,codeowners,security,license,sbom,dependabot,flake-update",
          type: string,
        }
      sync_mode: { required: false, default: ephemeral, type: string }
# Note: This workflow requires the following permissions:
# permissions:
#   contents: read    # To checkout and read repository contents
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/determinate-nix-action@v3.12.0
      - uses: actions/checkout@v5
      - name: Materialize selected packs
        env:
          NIXLINE_PACKS: ${{ inputs.packs }}
          NIXLINE_SYNC_MODE: ${{ inputs.sync_mode }}
        run: |
          nix run "github:NixLine-org/nixline-baseline?ref=${{ inputs.channel }}"#sync
      - name: Run org checks
        env:
          NIXLINE_PACKS: ${{ inputs.packs }}
        run: |
          nix run "github:NixLine-org/nixline-baseline?ref=${{ inputs.channel }}"#check
