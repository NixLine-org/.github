name: NixLine SBOM (reusable)
on:
  workflow_call:
    inputs:
      channel: { required: false, default: stable, type: string }
      format:  { required: false, default: cyclonedx-json, type: string }
      target:  { required: false, default: workspace, type: string }
permissions:
  contents: read
jobs:
  sbom:
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/determinate-nix-action@v3.5.2
      - uses: actions/checkout@v4
      - name: Generate SBOM (syft)
        run: |
          nix shell nixpkgs#syft -c bash -lc '
            fmt="${{ inputs.format }}"
            case "$fmt" in
              cyclonedx-json) out=sbom.cdx.json ; opt="-o cyclonedx-json" ;;
              cyclonedx-xml)  out=sbom.cdx.xml  ; opt="-o cyclonedx-xml"  ;;
              spdx-json)      out=sbom.spdx.json; opt="-o spdx-json"      ;;
            esac
            syft dir:. $opt > "$out"
          '
      - uses: actions/upload-artifact@v5
        with:
          name: sbom
          path: sbom.*
