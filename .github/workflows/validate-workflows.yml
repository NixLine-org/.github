#
# Validate Workflows
#
# Validates all workflow files in the .github repository for syntax and quality.
# Ensures YAML syntax, GitHub Actions syntax, and shell scripts are correct
# before workflows are used across the organization.
#
# Triggered by: push, pull_request (all branches)
# Purpose: Quality control for organization-wide reusable workflows
# Output: Prevents broken workflows from being deployed organization-wide
#

name: Validate Workflows

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yamllint
        run: |
          pip install yamllint
          yamllint --version

      - name: Install actionlint
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          chmod +x ./actionlint
          sudo mv ./actionlint /usr/local/bin/
          actionlint --version

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          shellcheck --version

      - name: Validate YAML syntax
        run: |
          echo "## YAML Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Relaxed yamllint config for GitHub Actions workflows
          cat > .yamllint << EOF
          extends: default
          rules:
            line-length:
              max: 200
            comments: disable
            document-start: disable
            truthy: disable
            braces:
              max-spaces-inside: 1
            new-line-at-end-of-file: disable
          EOF

          if yamllint -c .yamllint .github/workflows/*.yml; then
            echo "**PASSED** - All workflow files have valid YAML syntax" >> $GITHUB_STEP_SUMMARY
          else
            echo "**FAILED** - YAML syntax errors detected" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Validate GitHub Actions syntax
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## GitHub Actions Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Run actionlint (warnings are OK, we only fail on errors)
          # Disable noisy shellcheck rules common in GitHub Actions
          export SHELLCHECK_OPTS="-e SC2086 -e SC2129"

          # Run and capture output (allow warnings)
          actionlint .github/workflows/*.yml 2>&1 | tee actionlint.log || true

          # Filter out ignored shellcheck warnings
          grep -v "SC2086\|SC2129" actionlint.log > filtered.log || true

          # Check if there are any remaining errors
          if [ -s filtered.log ] && grep -q "error:" filtered.log; then
            echo "**FAILED** - Critical GitHub Actions errors detected" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat filtered.log >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "**PASSED** - All workflows have valid GitHub Actions syntax" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Validate shell scripts in workflows
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Shell Script Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Extract and check shell scripts from workflows
          ERRORS=0
          for workflow in .github/workflows/*.yml; do
            echo "Checking shell scripts in: $workflow"

            # This is a basic check - actionlint already runs shellcheck
            # but we report it separately for clarity
            if grep -q "run: |" "$workflow" || grep -q "run: >" "$workflow"; then
              echo "  Found shell scripts in $workflow"
            fi
          done

          if [ $ERRORS -eq 0 ]; then
            echo "**PASSED** - Shell scripts validated via actionlint" >> $GITHUB_STEP_SUMMARY
          else
            echo "**FAILED** - Shell script errors detected" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Check for required permissions documentation
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Permissions Documentation Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          MISSING_DOCS=0

          for workflow in .github/workflows/*.yml; do
            # Skip non-reusable workflows
            if ! grep -q "workflow_call:" "$workflow"; then
              continue
            fi

            # Check if reusable workflow has permissions documentation
            if ! grep -q "# Note: This workflow requires" "$workflow" && \
               ! grep -q "# permissions:" "$workflow"; then
              echo "Warning: $workflow missing permissions documentation" >> $GITHUB_STEP_SUMMARY
              MISSING_DOCS=$((MISSING_DOCS + 1))
            fi
          done

          if [ $MISSING_DOCS -eq 0 ]; then
            echo "**PASSED** - All reusable workflows document required permissions" >> $GITHUB_STEP_SUMMARY
          else
            echo "**WARNING** - $MISSING_DOCS reusable workflow(s) missing permissions documentation" >> $GITHUB_STEP_SUMMARY
            echo "This is a warning only and does not fail the build" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Validation summary
        if: success()
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**All validation checks passed**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Validated workflows in \`.github/workflows/\`:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -1 .github/workflows/*.yml >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
